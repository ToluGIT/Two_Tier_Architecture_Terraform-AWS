name: Terraform CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      destroy:
        description: "Run terraform destroy (set to 'true' to trigger destroy job)"
        required: false
        default: "false"

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    env:
      TF_LOG: INFO
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TERRAFORM_DIR: ./Terra

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'  # Use a stable Python version

    - name: Install Checkov
      run: pip install checkov

    - name: Run Checkov with Custom Policies
      run: |
        checkov --quiet --directory ${{ env.TERRAFORM_DIR }} \
                --external-checks-dir .checkov/custom_policies \
                --output sarif \
                --output-file-path checkov_results.sarif
      continue-on-error: true

    - name: List files after Checkov run
      run: find . -type f

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: checkov_results.sarif

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve tfplan
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Output
      run: terraform output
      working-directory: ${{ env.TERRAFORM_DIR }}

  terraform-destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy == 'true'

    env:
      TF_LOG: INFO
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TERRAFORM_DIR: ./Terra

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: ${{ env.TERRAFORM_DIR }}
