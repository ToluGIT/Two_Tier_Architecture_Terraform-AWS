name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destroy:
        description: "Run terraform destroy (set to 'true' to trigger destroy job)"
        required: false
        default: "false"

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_LOG: INFO
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install Checkov
      run: pip install checkov

    - name: Run Checkov for Security Scanning
      run: checkov --directory ../../Two_Tier_Architecture_Terraform-AWS/Two_Tier_Architecture_Terraform-AWS --output json > checkov-report.json || true
    
    - name: Upload Checkov Report
      uses: actions/upload-artifact@v3
      with:
        name: checkov-report
        path: checkov-report.json
        
    - name: Terraform Init
      run: terraform init
      working-directory: ../../Two_Tier_Architecture_Terraform-AWS/Two_Tier_Architecture_Terraform-AWS

    - name: Terraform Format Check
      run: terraform fmt -check
      
    - name: Terraform Validate
      run: terraform validate
      working-directory: ../../Two_Tier_Architecture_Terraform-AWS/Two_Tier_Architecture_Terraform-AWS

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Output
      run: terraform output
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform-destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy == 'true' 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8

    - name: Terraform Init
      run: terraform init
      working-directory: ../../Two_Tier_Architecture_Terraform-AWS/Two_Tier_Architecture_Terraform-AWS

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: ../../Two_Tier_Architecture_Terraform-AWS/Two_Tier_Architecture_Terraform-AWS
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
